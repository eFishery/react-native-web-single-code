import _range from "lodash/range"; /*eslint no-magic-numbers: ["error", { "ignore": [0, 1, 2, 2.5, 3] }]*/

export default {
  circle: function (x, y, size) {
    var s = Math.round(size);
    return "M " + Math.round(x) + ", " + Math.round(y) + " m " + -s + ", 0\n      a " + s + ", " + s + " 0 1,0 " + s * 2 + ",0\n      a " + s + ", " + s + " 0 1,0 " + -s * 2 + ",0";
  },
  square: function (x, y, size) {
    var baseSize = 0.87 * size; // eslint-disable-line no-magic-numbers
    var x0 = Math.round(x - baseSize);
    var x1 = Math.round(x + baseSize);
    var y0 = Math.round(y - baseSize);
    var y1 = Math.round(y + baseSize);
    return "M " + x0 + ", " + y1 + "\n      L " + x1 + ", " + y1 + "\n      L " + x1 + ", " + y0 + "\n      L " + x0 + ", " + y0 + "\n      z";
  },
  diamond: function (x, y, size) {
    var baseSize = 0.87 * size; // eslint-disable-line no-magic-numbers
    var length = Math.sqrt(2 * (baseSize * baseSize));
    return "M " + Math.round(x) + ", " + Math.round(y + length) + "\n      L " + Math.round(x + length) + ", " + Math.round(y) + "\n      L " + Math.round(x) + ", " + Math.round(y - length) + "\n      L " + Math.round(x - length) + ", " + Math.round(y) + "\n      z";
  },
  triangleDown: function (x, y, size) {
    var height = size / 2 * Math.sqrt(3);
    var x0 = Math.round(x - size);
    var x1 = Math.round(x + size);
    var y0 = Math.round(y - size);
    var y1 = Math.round(y + height);
    return "M " + x0 + ", " + y0 + "\n      L " + x1 + ", " + y0 + "\n      L " + Math.round(x) + ", " + y1 + "\n      z";
  },
  triangleUp: function (x, y, size) {
    var height = size / 2 * Math.sqrt(3);
    var x0 = Math.round(x - size);
    var x1 = Math.round(x + size);
    var y0 = Math.round(y - height);
    var y1 = Math.round(y + size);
    return "M " + x0 + ", " + y1 + "\n      L " + x1 + ", " + y1 + "\n      L " + Math.round(x) + ", " + y0 + "\n      z";
  },
  plus: function (x, y, size) {
    var baseSize = 1.1 * size; // eslint-disable-line no-magic-numbers
    return "M " + Math.round(x - baseSize / 2.5) + ", " + Math.round(y + baseSize) + "\n      L " + Math.round(x + baseSize / 2.5) + ", " + Math.round(y + baseSize) + "\n      L " + Math.round(x + baseSize / 2.5) + ", " + Math.round(y + baseSize / 2.5) + "\n      L " + Math.round(x + baseSize) + ", " + Math.round(y + baseSize / 2.5) + "\n      L " + Math.round(x + baseSize) + ", " + Math.round(y - baseSize / 2.5) + "\n      L " + Math.round(x + baseSize / 2.5) + ", " + Math.round(y - baseSize / 2.5) + "\n      L " + Math.round(x + baseSize / 2.5) + ", " + Math.round(y - baseSize) + "\n      L " + Math.round(x - baseSize / 2.5) + ", " + Math.round(y - baseSize) + "\n      L " + Math.round(x - baseSize / 2.5) + ", " + Math.round(y - baseSize / 2.5) + "\n      L " + Math.round(x - baseSize) + ", " + Math.round(y - baseSize / 2.5) + "\n      L " + Math.round(x - baseSize) + ", " + Math.round(y + baseSize / 2.5) + "\n      L " + Math.round(x - baseSize / 2.5) + ", " + Math.round(y + baseSize / 2.5) + "\n      z";
  },
  star: function (x, y, size) {
    var baseSize = 1.35 * size; // eslint-disable-line no-magic-numbers
    var angle = Math.PI / 5; // eslint-disable-line no-magic-numbers
    var starCoords = _range(10).map(function (index) {
      // eslint-disable-line no-magic-numbers
      var length = index % 2 === 0 ? baseSize : baseSize / 2;
      return length * Math.sin(angle * (index + 1)) + x + ",\n        " + (length * Math.cos(angle * (index + 1)) + y);
    });
    return "M " + starCoords.join("L") + " z";
  }
};